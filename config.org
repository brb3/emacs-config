#+TITLE: Bobby Burden III's Emacs Configuration File

* Configuration
** macOS Specific Changes
On macOS, I need to shuffle the modifier keys around a bit. I have =cmd= mapped
to Caps-Lock, so I want to use that as =C-= in emacs.
#+BEGIN_SRC emacs-lisp
  (if (eq system-type 'darwin)
      (setq mac-command-modifier 'ctrl
            mac-option-modifier 'meta
            mac-control-modifier 'super))
#+END_SRC

** Linux Specific Changes
When on Linux, I want to disable =menu-bar-mode=. I need it on macOS for
fullscreen to work properly.

On Linux, I don't adjust the modifier keys, as I normally will map =Ctrl= to
replace Caps-Lock.
#+BEGIN_SRC emacs-lisp
  (if (eq system-type 'gnu/linux)
      (menu-bar-mode -1))
#+END_SRC
** Personal Information
#+BEGIN_SRC emacs-lisp
  (setq user-full-name "Bobby Burden III"
        user-mail-address "bobby@brb3.org")
#+END_SRC

** The Basics
*** Start the Server
I use =emacsclient= when editing files in a terminal or eshell, so I need the
server running
#+BEGIN_SRC emacs-lisp
  (server-start)
#+END_SRC

*** Backups
#+BEGIN_SRC emacs-lisp
  (setq backup-directory-alist '(("." . "~/.emacs.d/backups"))
        delete-old-versions -1
        version-control t
        vc-make-backup-files t
        auto-save-file-name-transforms '((".*" "~/.emacs.d/auto-save-list/" t)))
#+END_SRC

Make sure that =tramp= keeps its backups locally
#+BEGIN_SRC emacs-lisp
  (setq tramp-backup-directory-alist backup-directory-alist)
#+END_SRC

*** Package Management
Configure =package=, the package archives and =use-package=.
#+BEGIN_SRC emacs-lisp
  (require 'package)

  (setq package-enable-at-startup nil
        package-archives '(("org"       . "http://orgmode.org/elpa/")
                           ("gnu"       . "http://elpa.gnu.org/packages/")
                           ("melpa"     . "https://melpa.org/packages/")
                           ("marmalade" . "http://marmalade-repo.org/packages/")))

  (package-initialize)

  (unless (package-installed-p 'use-package) ;; unless it is already installed
    (package-refresh-contents)               ;; update packages archive
    (package-install 'use-package))          ;; and install the most recent version of use-package

  (require 'use-package)
#+END_SRC

*** General Packages
Setup =ivy= and friends.
#+BEGIN_SRC emacs-lisp
  ;; Ivy
  (use-package general :ensure t)
  (use-package swiper :ensure t)
  (use-package counsel :ensure t)
  (use-package ivy :ensure t
    :config
    (recentf-mode 1)
    (ivy-mode 1)
    (setq ivy-use-virtual-buffers 1)
    (general-define-key
     "C-s" 'swiper
     "M-x" 'counsel-M-x
     "C-x C-m" 'counsel-M-x
     "C-x C-f" 'counsel-find-file
     "C-x r" 'counsel-recentf
     "C-x C-r" 'counsel-recentf))
#+END_SRC

Make sure to add =magit=.
#+BEGIN_SRC emacs-lisp
  ;; Gotta have magit
  (use-package magit :ensure t
    :config
    (general-define-key
     "C-x g" 'magit-status))
#+END_SRC

Next are =projectile=, =ag=, =smex=, and =dired+=.
#+BEGIN_SRC emacs-lisp
  (use-package projectile :ensure t)
  (use-package counsel-projectile :ensure t
    :config
    (general-define-key
     "C-c pf" 'counsel-projectile-find-file))

  (use-package ag :ensure t)
  (use-package smex :ensure t)

  ;; Get dired+, reuse the same buffer when opening directories
  (use-package dired+ :ensure t
    :config
    (toggle-diredp-find-file-reuse-dir 1))

  ;; macOS's ls doesn't support the "--dired" switch (BSD ls vs. GNU ls)
  (if (eq system-type 'darwin)
      (setq dired-use-ls-dired nil))
#+END_SRC

Grab =markdown-mode=
#+BEGIN_SRC emacs-lisp
  (use-package markdown-mode :ensure t)
#+END_SRC
*** Visual Changes
We don't need no stinking window chrome.
#+BEGIN_SRC emacs-lisp
  (scroll-bar-mode -1)
  (tool-bar-mode -1)
#+END_SRC

Startup, encoding, fill-column, etc.
#+BEGIN_SRC emacs-lisp
  (setq fill-column 80
        default-fill-column 80
        vc-follow-symlinks t
        inhibit-startup-screen t
        ring-bell-function 'ignore
        coding-system-for-read 'utf-8
        coding-system-for-write 'utf-8
        sentence-end-double-space nil
        initial-scratch-message ";; Welcome to Emacs\n\n")

  (use-package fill-column-indicator :ensure t
    :config
    (setq fci-rule-width 2
          fci-rule-color "black")
    (add-hook 'after-change-major-mode-hook 'fci-mode))
#+END_SRC

Make org-mode look a little nicer, and build agendas correctly. Oh, and also
open directories in dired and follow links when I hit <RET>
#+BEGIN_SRC emacs-lisp
  (setq org-ellipsis " [â€¦]"
        org-hide-leading-stars t
        org-return-follows-links t
        org-agenda-files '("~/Documents/orgs/"))

  (add-to-list 'org-file-apps '(directory . emacs))
  (add-hook 'org-mode-hook 'auto-fill-mode)
#+END_SRC

This makes re-centering (<C-l>) go "top-middle-bottom"
#+BEGIN_SRC emacs-lisp
  (setq recenter-positions '(top middle bottom))
#+END_SRC

Using =moe-theme= and =powerline=
#+BEGIN_SRC emacs-lisp
  (use-package powerline :ensure t)
  (use-package moe-theme :ensure t
    :config
    (setq moe-theme-highlight-buffer-id t
          moe-theme-resize-markdown-title '(1.5 1.4 1.3 1.2 1.0 1.0)
          moe-theme-resize-org-title '(1.5 1.4 1.3 1.2 1.1 1.0 1.0 1.0 1.0)
          moe-theme-resize-rst-title '(1.5 1.4 1.3 1.2 1.1 1.0))

    (moe-dark)
    (powerline-moe-theme))
#+END_SRC

Enable =winner-mode=.
#+BEGIN_SRC emacs-lisp
  (winner-mode 1)
#+END_SRC

** Development
Tabs and spaces, the eternal debate. Also, get rid of trailing whitespace.
#+BEGIN_SRC emacs-lisp
  (setq indent-tabs-mode nil
        c-basic-offset 4
        nxml-child-indent 4
        nxml-attribute-indent 4)

  (add-hook 'before-save-hook 'delete-trailing-whitespace)
#+END_SRC

*** PHP
Make geben listen to port 9001
#+BEGIN_SRC emacs-lisp
  (use-package geben :ensure t
    :config
    (setq dbgp-default-port 9001))
#+END_SRC

Here, I copy some of the changes from [[http://www.blogbyben.com/2016/08/emacs-php-modern-and-far-more-complete.html][this blog post]] by Ben Simon.
This enables [[https://www.gnu.org/software/emacs/manual/html_node/ccmode/Subword-Movement.html][subword-mode]], and turns off template compatibility, and
verifies some formatting settings.

#+BEGIN_SRC emacs-lisp
  (use-package php-mode :ensure t)
  (use-package web-mode :ensure t)
  (use-package ac-php :ensure t)

  (defun brb3-php-mode-hook ()
    (auto-complete-mode t)
    (yas-global-mode 1)
    (require 'ac-php)
    (setq indent-tabs-mode nil
          c-basic-offset 4
          php-template-compatibility nil
          subword-mode 1
          ac-sources '(ac-source-php)))

  (add-hook 'php-mode-hook 'brb3-php-mode-hook)
#+END_SRC

Next, also inspired by Ben Simon's blog post, we setup web-mode to use
with template files (=.phtml=). Also, configured =<f5>= to quickly
toggle between the two modes.

#+BEGIN_SRC emacs-lisp
(defun brb3-web-mode-hook ()
       (setq indent-tabs-mode nil
             web-mode-markup-indent-offset 4
             web-mode-css-indent-offset 4
             web-mode-code-indent-offset 4))

(add-hook 'web-mode-hook 'brb3-web-mode-hook)

(defun toggle-php-flavor-mode ()
       (interactive)
       "Toggle mode between php-mode & web-mode"
       (cond ((eq major-mode 'php-mode)
              (web-mode))
             ((eq major-mode 'web-mode)
              (php-mode))))

(global-set-key [f5] 'toggle-php-flavor-mode)
#+END_SRC

*** Magit
Turn on =magit-gh-pulls=.
#+BEGIN_SRC emacs-lisp
  (use-package magit-gh-pulls :ensure t
    :config
    (add-hook 'magit-mode-hook 'turn-on-magit-gh-pulls))
#+END_SRC

*** Swift
Add =swift3-mode=.
#+BEGIN_SRC emacs-lisp
  (use-package swift3-mode :ensure t)
#+END_SRC
*** Web
I use =restclient= for testing.
#+BEGIN_SRC emacs-lisp
  (use-package restclient :ensure t)
#+END_SRC
*** Yasnippet
I'm using =yasnippet= so I can type a bit less, and be more productive (right?).
#+BEGIN_SRC emacs-lisp
  (use-package yasnippet :ensure t
    :init
    (yas-global-mode 1)
    :config
    (add-to-list 'yas-snippet-dirs (locate-user-emacs-file "snippets")))
#+END_SRC
** Misc
*** Sentences should end with a single space.
#+BEGIN_SRC emacs-lisp
  (setq sentence-end-double-space nil)
#+END_SRC

*** org-page Configuration for [[https://brb3.org/][brb3.org]]
#+BEGIN_SRC emacs-lisp
  (setq op/repository-directory "~/Sites/brb3.dev/"
        op/personal-disqus-shortname "brb3"
        op/personal-google-analytics-id "UA-31681523-1"
        op/personal-github-link "https://github.com/brb3"
        op/personal-avatar "https://www.gravatar.com/avatar/md5sumOfYourEmailAddress"
        op/site-domain "https://brb3.org/"
        op/site-main-title "brb3://"
        op/site-sub-title "Bobby Burden III - Software Developer")
#+END_SRC

*** Pop to mark
#+BEGIN_SRC emacs-lisp
  (global-set-key (kbd "C-x p") 'pop-to-mark-command)
  (setq set-mark-command-repeat-pop t)
#+END_SRC

*** Shorten Yes/No prompts
#+BEGIN_SRC emacs-lisp
  (fset 'yes-or-no-p 'y-or-n-p)
#+END_SRC

*** Why would you ever leave Emacs?
#+BEGIN_SRC emacs-lisp
  (global-unset-key (kbd "C-x C-c"))
#+END_SRC

*** Enable deactivated commands
#+BEGIN_SRC emacs-lisp
  (setq disabled-command-function nil)
#+END_SRC
*** Twitter
#+BEGIN_SRC emacs-lisp
  (use-package twittering-mode :ensure t
    :config
    (setq twittering-use-master-password t
          twittering-icon-mode t))
#+END_SRC
*** NixOS
Add package for NixOS configs
#+BEGIN_SRC emacs-lisp
  (use-package nix-mode :ensure t)
#+END_SRC
